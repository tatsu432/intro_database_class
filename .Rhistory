library(RMySQL)
library(DBI)
drv <- dbDriver("MySQL")
conn <- dbConnect(
drv,
host = "localhost",
port = 3306,
user = "us21304",
password = "+Tshimizu432",
dbname = "us21304"
)
conn <- dbConnect(
drv,
host = "localhost",
port = 3306,
user = "jugyou",
password = "+Tshimizu432",
dbname = "us21304"
)
conn <- dbConnect(
drv,
host = "localhost",
port = 3306,
user = "ensyu",
password = "+Tshimizu432",
dbname = "us21304"
)
conn <- dbConnect(
drv,
host = "localhost",
port = 3306,
user = "ensyu",
password = "+oYAyjXh",
dbname = "us21304"
)
#データの読み込み
DF <- read.table("box_plot.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE,
fileEncoding="UTF-8-BOM")
#内容を確認
head(DF)
library(ggplot2)
library(gridExtra)
p1 <- ggplot(DF)+
geom_boxplot(aes(y = score_all_art,
x = both_heritage))
ggplot(DF)+
geom_boxplot(aes(y = score_all_art,
x = both_heritage))
#データの読み込み
DF <- read.table("box_plot.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE,
fileEncoding="UTF-8-BOM")
#内容を確認
head(DF)
library(ggplot2)
library(gridExtra)
ggplot(DF)+
geom_boxplot(aes(y = score_all_art,
x = both_heritage))
#データの読み込み
DF <- read.table("box_plot.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE,
fileEncoding="UTF-8-BOM")
#内容を確認
head(DF)
library(ggplot2)
library(gridExtra)
ggplot(DF)+
geom_boxplot(aes(y = 芸術指標,
x = 世界遺産件数))
#データの読み込み
DF <- read.table("for_figure.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE,
fileEncoding="UTF-8-BOM")
#内容を確認
head(DF)
#データの読み込み
DF <- read.table("for_figure.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE,
fileEncoding="UTF-8-BOM")
#内容を確認
head(DF)
#相関行列の作成
COR1 <- cor(DF[, c(3,4:10)])
COR1
#相関係数のグラフ表示
library(qgraph)
qgraph(COR1,
minimum=.20,
labels=colnames(COR1),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
COR2 <- cor(DF[, c(3, 11:17)])
COR2
qgraph(COR2,
minimum=.20,
labels=colnames(COR2),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
#データの読み込み
DF <- read.table("for_figure.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE,
fileEncoding="UTF-8-BOM")
#内容を確認
head(DF)
#相関行列の作成
COR1 <- cor(DF[, c(3,4:10)])
COR1
COR2 <- cor(DF[, c(3, 11:17)])
COR2
COR3 <- cor(DF[, c(3, 18:24)])
COR3
#相関係数のグラフ表示
library(qgraph)
qgraph(COR1,
minimum=.20,
labels=colnames(COR1),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
qgraph(COR2,
minimum=.20,
labels=colnames(COR2),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
qgraph(COR3,
minimum=.20,
labels=colnames(COR3),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
#データの読み込み
DF <- read.table("for_figure.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE,
fileEncoding="UTF-8-BOM")
#内容を確認
head(DF)
#相関行列の作成
COR1 <- cor(DF[, c(3,4:10)])
COR1
COR2 <- cor(DF[, c(3, 11:17)])
COR2
COR3 <- cor(DF[, c(3, 18:24)])
COR3
#相関係数のグラフ表示
library(qgraph)
qgraph(COR1,
minimum=.20,
labels=colnames(COR1),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
qgraph(COR2,
minimum=.20,
labels=colnames(COR2),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
qgraph(COR3,
minimum=.20,
labels=colnames(COR3),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
#データの読み込み
DF <- read.table("for_figure.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE,
fileEncoding="UTF-8-BOM")
#内容を確認
head(DF)
#相関行列の作成
COR1 <- cor(DF[, c(3,4:10)])
COR1
COR2 <- cor(DF[, c(3, 11:17)])
COR2
COR3 <- cor(DF[, c(3, 18:24)])
COR3
#相関係数のグラフ表示
library(qgraph)
qgraph(COR1,
minimum=.20,
labels=colnames(COR1),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
qgraph(COR2,
minimum=.20,
labels=colnames(COR2),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
qgraph(COR3,
minimum=.20,
labels=colnames(COR3),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
#データの読み込み
DF <- read.table("for_figure.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE,
fileEncoding="UTF-8-BOM")
#内容を確認
head(DF)
#相関行列の作成
COR1 <- cor(DF[, c(3,4:10)])
COR1
COR2 <- cor(DF[, c(3, 11:17)])
COR2
COR3 <- cor(DF[, c(3, 18:24)])
COR3
#相関係数のグラフ表示
library(qgraph)
qgraph(COR1,
minimum=.20,
labels=colnames(COR1),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
qgraph(COR2,
minimum=.20,
labels=colnames(COR2),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
qgraph(COR3,
minimum=.20,
labels=colnames(COR3),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
#データの読み込み
DF <- read.table("for_figure.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE,
fileEncoding="UTF-8-BOM")
#内容を確認
head(DF)
#相関行列の作成
COR1 <- cor(DF[, c(3,4:10)])
COR1
COR2 <- cor(DF[, c(3, 11:17)])
COR2
COR3 <- cor(DF[, c(3, 18:24)])
COR3
#相関係数のグラフ表示
library(qgraph)
qgraph(COR1,
minimum=.20,
labels=colnames(COR1),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
qgraph(COR2,
minimum=.20,
labels=colnames(COR2),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
qgraph(COR3,
minimum=.20,
labels=colnames(COR3),
edge.labels=T,
label.scale=F,
label.cex=0.8,
edge.label.cex=1.4
)
#データの読み込み
DF <- read.table("for_figure.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE,
fileEncoding="UTF-8-BOM")
#内容を確認
head(DF)
#線形回帰モデルの作成lm0
lm0 <- lm(芸術指標日 ~ ., data = DF)
summary(lm0)
#線形回帰モデルの作成lm0
lm0 <- lm(芸術指標 ~ ., data = DF)
summary(lm0)
#線形回帰モデルの作成lm0
lm0 <- lm(芸術指標 ~ c(-1, -2), data = DF)
#線形回帰モデルの作成lm0
lm0 <- lm(芸術指標 ~ -c(1, 2), data = DF)
#線形回帰モデルの作成lm0
lm0 <- lm(芸術指標 ~ c(1, 2), data = DF)
#線形回帰モデルの作成lm0
lm0 <- lm(芸術指標 ~ 学習.自己啓発 + 外国語 + ビジネス + バレーボール +
釣り + 登山 + 国際活動 + テレビラジオ.新聞.雑誌, data = DF)
summary(lm0)
#データの読み込み
DF <- read.table("for_figure.csv",
sep = ",",
header = TRUE,
stringsAsFactors = FALSE,
fileEncoding="UTF-8-BOM")
#内容を確認
head(DF)
#平行分析
library(psych)
result.prl <- fa.parallel(DF[, (3:23)], fm="ml")
#平行分析
library(psych)
result.prl <- fa.parallel(DF[, (4:23)], fm="ml")
#因子分析FA
resultFA1 <- fa(DF[, (4:23)],
fm = "ml",
nfactors=4,
rotate = "varimax",
scores = "regression")
print(resultFA1, digits=2, srt=TRUE)
fa.diagram(resultFA1,
rsize=0.8,
e.size=0.1,
marg=c(.5, 5, .5, .5),
cex=.6
)
#因子分析FA
resultFA1 <- fa(DF[, (4:23)],
fm = "ml",
nfactors=4,
rotate = "varimax",
scores = "regression")
print(resultFA1, digits=2, srt=TRUE)
fa.diagram(resultFA1,
rsize=0.8,
e.size=0.1,
marg=c(.5, 5, .5, .5),
cex=.6
)
head(resultFA1$scores)
#因子分析FA
resultFA1 <- fa(DF[, (4:23)],
fm = "ml",
nfactors=4,
rotate = "varimax",
scores = "regression")
print(resultFA1, digits=2, srt=TRUE)
fa.diagram(resultFA1,
rsize=0.8,
e.size=0.1,
marg=c(.5, 5, .5, .5),
cex=.6
)
head(resultFA1$scores)
DFfa1 <- as.data.frame(resultFA1$scores)
#因子のデータフレームを追加
DFnew <- cbind(DF, DFfa1)
head(DFnew)
#因子分析FA
resultFA1 <- fa(DF[, (4:23)],
fm = "ml",
nfactors=4,
rotate = "varimax",
scores = "regression")
print(resultFA1, digits=2, srt=TRUE)
fa.diagram(resultFA1,
rsize=0.8,
e.size=0.1,
marg=c(.5, 5, .5, .5),
cex=.6
)
#平行分析
library(psych)
result.prl <- fa.parallel(DF[, (4:23)], fm="ml")
